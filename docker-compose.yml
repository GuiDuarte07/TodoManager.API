version: '3.8'

services:
  postgresdb:
    image: postgres:16-alpine
    container_name: todomanager-db
    restart: always 
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
        - "5432:5432" 
    
  todomanager:
    image: ${DOCKER_REGISTRY-}todomanager
    build:
      context: .
      dockerfile: TodoManager/Dockerfile
    container_name: todomanager-api
    ports:
        - "8080:8080" 
        - "8081:8081"
    
    depends_on:
      - postgresdb
      
    environment:
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ASPNETCORE_URLS=http://+:8080;http://+:8081
      - ConnectionStrings__DefaultConnection=Host=postgresdb;Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
  
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    depends_on:
      - todomanager
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do
        certbot renew --webroot -w /var/www/certbot;
        sleep 12h & wait $${!};
      done"

networks:
  default:
    driver: bridge

volumes:
  postgres_data: